{
    "address": "0xEb3e7dded00Aba483d36C8Ad755011a9437936d0",
    "abi": [
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "priceFeedAddress",
                    "type": "address"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "constructor"
        },
        {
            "inputs": [],
            "name": "FundMe__NotOwner",
            "type": "error"
        },
        {
            "stateMutability": "payable",
            "type": "fallback"
        },
        {
            "inputs": [],
            "name": "MIN_USD",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "cheaperWithdraw",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "fund",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "funder",
                    "type": "address"
                }
            ],
            "name": "getAddressToAmountFunded",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "index",
                    "type": "uint256"
                }
            ],
            "name": "getFunder",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getOwner",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getPriceFeed",
            "outputs": [
                {
                    "internalType": "contract AggregatorV3Interface",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "withdraw",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "stateMutability": "payable",
            "type": "receive"
        }
    ],
    "transactionHash": "0x8f4c383cd671b17fd464051a4f346463bed11332e0edb1e088dfdb98ab144587",
    "receipt": {
        "to": null,
        "from": "0xa9E57A92dC43A2d94B7acb93A35f3035C57C6480",
        "contractAddress": "0xEb3e7dded00Aba483d36C8Ad755011a9437936d0",
        "transactionIndex": 12,
        "gasUsed": "1018982",
        "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
        "blockHash": "0x3443d895246b27512055e1f7122f8debefc2b0928a8d19526d5838c2cea869c8",
        "transactionHash": "0x8f4c383cd671b17fd464051a4f346463bed11332e0edb1e088dfdb98ab144587",
        "logs": [],
        "blockNumber": 11041406,
        "cumulativeGasUsed": "6237329",
        "status": 1,
        "byzantium": true
    },
    "args": ["0x8A753747A1Fa494EC906cE90E9f37563A8AF630e"],
    "numDeployments": 1,
    "solcInputHash": "2cda4f68da575d15466385eec4f84487",
    "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MIN_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Aditya Taday\",\"details\":\"This implements PriceConvertor.sol as our library\",\"kind\":\"dev\",\"methods\":{\"fund()\":{\"details\":\"This implements PriceConvertor.sol as our library\"}},\"title\":\"A contract to crowd funding\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"fund()\":{\"notice\":\"This function funds the contract\"}},\"notice\":\"This is to demo a sample funding contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror FundMe__NotOwner();\\n\\n/**\\n    @title A contract to crowd funding\\n    @author Aditya Taday\\n    @notice This is to demo a sample funding contract\\n    @dev This implements PriceConvertor.sol as our library\\n */\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    uint256 public constant MIN_USD = 50 * 1e18;\\n    address private immutable i_owner;\\n    address[] private funders;\\n    mapping(address => uint256) private addressToAmountFunded;\\n    AggregatorV3Interface private priceFeed;\\n\\n    modifier onlyOwner() {\\n        if (msg.sender != i_owner) revert FundMe__NotOwner();\\n        _;\\n    }\\n\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    /**\\n    @notice This function funds the contract\\n    @dev This implements PriceConvertor.sol as our library\\n     */\\n    function fund() public payable {\\n        require(\\n            msg.value.getConversionRate(priceFeed) >= MIN_USD,\\n            \\\"Not enough\\\"\\n        );\\n        funders.push(msg.sender);\\n        addressToAmountFunded[msg.sender] = msg.value;\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        for (uint256 i = 0; i < funders.length; i++) {\\n            address funder = funders[i];\\n            addressToAmountFunded[funder] = 0;\\n        }\\n\\n        funders = new address[](0);\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"call failed\\\");\\n    }\\n\\n    function cheaperWithdraw() public payable onlyOwner {\\n        address[] memory m_funders = funders;\\n\\n        for (uint256 i = 0; i < m_funders.length; i++) {\\n            address funder = m_funders[i];\\n            addressToAmountFunded[funder] = 0;\\n        }\\n\\n        funders = new address[](0);\\n\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"call failed\\\");\\n    }\\n\\n    function getOwner() public view returns (address) {\\n        return i_owner;\\n    }\\n\\n    function getFunder(uint256 index) public view returns (address) {\\n        return funders[index];\\n    }\\n\\n    function getAddressToAmountFunded(address funder)\\n        public\\n        view\\n        returns (uint256)\\n    {\\n        return addressToAmountFunded[funder];\\n    }\\n\\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\\n        return priceFeed;\\n    }\\n}\\n\",\"keccak256\":\"0x73d977ac255d9706b27d7149ae75c9fa91d85ff18be144d07457ffd175254027\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n    function getPrice(AggregatorV3Interface priceFeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        (, int256 price, , , ) = priceFeed.latestRoundData();\\n\\n        return uint256(price * 1e10);\\n    }\\n\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18;\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0xef0d2c50ee0079647690603260a7267c632317ed0d373d8acbd6d6e1b4e13758\",\"license\":\"MIT\"}},\"version\":1}",
    "bytecode": "0x60a06040523480156200001157600080fd5b506040516200129138038062001291833981810160405281019062000037919062000120565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000152565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e882620000bb565b9050919050565b620000fa81620000db565b81146200010657600080fd5b50565b6000815190506200011a81620000ef565b92915050565b600060208284031215620001395762000138620000b6565b5b6000620001498482850162000109565b91505092915050565b60805160601c6111126200017f6000396000818161033f0152818161058101526105d101526111126000f3fe60806040526004361061007f5760003560e01c80639e87a5cd1161004e5780639e87a5cd14610142578063b60d42881461016d578063be2693f014610177578063d7b4750c146101815761008e565b80630343fb2514610098578063213dbea2146100d55780633ccfd60b14610100578063893d20e8146101175761008e565b3661008e5761008c6101be565b005b6100966101be565b005b3480156100a457600080fd5b506100bf60048036038101906100ba9190610aa0565b6102e7565b6040516100cc9190610ae6565b60405180910390f35b3480156100e157600080fd5b506100ea610330565b6040516100f79190610ae6565b60405180910390f35b34801561010c57600080fd5b5061011561033d565b005b34801561012357600080fd5b5061012c61057d565b6040516101399190610b10565b60405180910390f35b34801561014e57600080fd5b506101576105a5565b6040516101649190610b8a565b60405180910390f35b6101756101be565b005b61017f6105cf565b005b34801561018d57600080fd5b506101a860048036038101906101a39190610bd1565b610873565b6040516101b59190610b10565b60405180910390f35b6802b5e3af16b18800006101fd600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108ba90919063ffffffff16565b101561023e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023590610c5b565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6802b5e3af16b188000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103c2576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561046d5760008082815481106103e7576103e6610c7b565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061046590610cd9565b9150506103c5565b50600067ffffffffffffffff81111561048957610488610d22565b5b6040519080825280602002602001820160405280156104b75781602001602082028036833780820191505090505b50600090805190602001906104cd929190610996565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104f490610d82565b60006040518083038185875af1925050503d8060008114610531576040519150601f19603f3d011682016040523d82523d6000602084013e610536565b606091505b505090508061057a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057190610de3565b60405180910390fd5b50565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610654576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808054806020026020016040519081016040528092919081815260200182805480156106d757602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161068d575b5050505050905060005b81518110156107625760008282815181106106ff576106fe610c7b565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061075a90610cd9565b9150506106e1565b50600067ffffffffffffffff81111561077e5761077d610d22565b5b6040519080825280602002602001820160405280156107ac5781602001602082028036833780820191505090505b50600090805190602001906107c2929190610996565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516107e990610d82565b60006040518083038185875af1925050503d8060008114610826576040519150601f19603f3d011682016040523d82523d6000602084013e61082b565b606091505b505090508061086f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086690610de3565b60405180910390fd5b5050565b600080828154811061088857610887610c7b565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806108c6836108f6565b90506000670de0b6b3a764000085836108df9190610e03565b6108e99190610e8c565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561093f57600080fd5b505afa158015610953573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109779190610f4a565b5050509150506402540be4008161098e9190610fc5565b915050919050565b828054828255906000526020600020908101928215610a0f579160200282015b82811115610a0e5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906109b6565b5b509050610a1c9190610a20565b5090565b5b80821115610a39576000816000905550600101610a21565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a6d82610a42565b9050919050565b610a7d81610a62565b8114610a8857600080fd5b50565b600081359050610a9a81610a74565b92915050565b600060208284031215610ab657610ab5610a3d565b5b6000610ac484828501610a8b565b91505092915050565b6000819050919050565b610ae081610acd565b82525050565b6000602082019050610afb6000830184610ad7565b92915050565b610b0a81610a62565b82525050565b6000602082019050610b256000830184610b01565b92915050565b6000819050919050565b6000610b50610b4b610b4684610a42565b610b2b565b610a42565b9050919050565b6000610b6282610b35565b9050919050565b6000610b7482610b57565b9050919050565b610b8481610b69565b82525050565b6000602082019050610b9f6000830184610b7b565b92915050565b610bae81610acd565b8114610bb957600080fd5b50565b600081359050610bcb81610ba5565b92915050565b600060208284031215610be757610be6610a3d565b5b6000610bf584828501610bbc565b91505092915050565b600082825260208201905092915050565b7f4e6f7420656e6f75676800000000000000000000000000000000000000000000600082015250565b6000610c45600a83610bfe565b9150610c5082610c0f565b602082019050919050565b60006020820190508181036000830152610c7481610c38565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610ce482610acd565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610d1757610d16610caa565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610d6c600083610d51565b9150610d7782610d5c565b600082019050919050565b6000610d8d82610d5f565b9150819050919050565b7f63616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610dcd600b83610bfe565b9150610dd882610d97565b602082019050919050565b60006020820190508181036000830152610dfc81610dc0565b9050919050565b6000610e0e82610acd565b9150610e1983610acd565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610e5257610e51610caa565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610e9782610acd565b9150610ea283610acd565b925082610eb257610eb1610e5d565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610edc81610ebd565b8114610ee757600080fd5b50565b600081519050610ef981610ed3565b92915050565b6000819050919050565b610f1281610eff565b8114610f1d57600080fd5b50565b600081519050610f2f81610f09565b92915050565b600081519050610f4481610ba5565b92915050565b600080600080600060a08688031215610f6657610f65610a3d565b5b6000610f7488828901610eea565b9550506020610f8588828901610f20565b9450506040610f9688828901610f35565b9350506060610fa788828901610f35565b9250506080610fb888828901610eea565b9150509295509295909350565b6000610fd082610eff565b9150610fdb83610eff565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561101a57611019610caa565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561105757611056610caa565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561109457611093610caa565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff05821260008412600084121616156110d1576110d0610caa565b5b82820290509291505056fea2646970667358221220a154c5a09636b7f0b06b4e561740cb7c66424108451f49984d5ac08bcf663bc164736f6c63430008080033",
    "deployedBytecode": "0x60806040526004361061007f5760003560e01c80639e87a5cd1161004e5780639e87a5cd14610142578063b60d42881461016d578063be2693f014610177578063d7b4750c146101815761008e565b80630343fb2514610098578063213dbea2146100d55780633ccfd60b14610100578063893d20e8146101175761008e565b3661008e5761008c6101be565b005b6100966101be565b005b3480156100a457600080fd5b506100bf60048036038101906100ba9190610aa0565b6102e7565b6040516100cc9190610ae6565b60405180910390f35b3480156100e157600080fd5b506100ea610330565b6040516100f79190610ae6565b60405180910390f35b34801561010c57600080fd5b5061011561033d565b005b34801561012357600080fd5b5061012c61057d565b6040516101399190610b10565b60405180910390f35b34801561014e57600080fd5b506101576105a5565b6040516101649190610b8a565b60405180910390f35b6101756101be565b005b61017f6105cf565b005b34801561018d57600080fd5b506101a860048036038101906101a39190610bd1565b610873565b6040516101b59190610b10565b60405180910390f35b6802b5e3af16b18800006101fd600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108ba90919063ffffffff16565b101561023e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023590610c5b565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6802b5e3af16b188000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103c2576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561046d5760008082815481106103e7576103e6610c7b565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061046590610cd9565b9150506103c5565b50600067ffffffffffffffff81111561048957610488610d22565b5b6040519080825280602002602001820160405280156104b75781602001602082028036833780820191505090505b50600090805190602001906104cd929190610996565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104f490610d82565b60006040518083038185875af1925050503d8060008114610531576040519150601f19603f3d011682016040523d82523d6000602084013e610536565b606091505b505090508061057a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057190610de3565b60405180910390fd5b50565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610654576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808054806020026020016040519081016040528092919081815260200182805480156106d757602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161068d575b5050505050905060005b81518110156107625760008282815181106106ff576106fe610c7b565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061075a90610cd9565b9150506106e1565b50600067ffffffffffffffff81111561077e5761077d610d22565b5b6040519080825280602002602001820160405280156107ac5781602001602082028036833780820191505090505b50600090805190602001906107c2929190610996565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516107e990610d82565b60006040518083038185875af1925050503d8060008114610826576040519150601f19603f3d011682016040523d82523d6000602084013e61082b565b606091505b505090508061086f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086690610de3565b60405180910390fd5b5050565b600080828154811061088857610887610c7b565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806108c6836108f6565b90506000670de0b6b3a764000085836108df9190610e03565b6108e99190610e8c565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561093f57600080fd5b505afa158015610953573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109779190610f4a565b5050509150506402540be4008161098e9190610fc5565b915050919050565b828054828255906000526020600020908101928215610a0f579160200282015b82811115610a0e5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906109b6565b5b509050610a1c9190610a20565b5090565b5b80821115610a39576000816000905550600101610a21565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a6d82610a42565b9050919050565b610a7d81610a62565b8114610a8857600080fd5b50565b600081359050610a9a81610a74565b92915050565b600060208284031215610ab657610ab5610a3d565b5b6000610ac484828501610a8b565b91505092915050565b6000819050919050565b610ae081610acd565b82525050565b6000602082019050610afb6000830184610ad7565b92915050565b610b0a81610a62565b82525050565b6000602082019050610b256000830184610b01565b92915050565b6000819050919050565b6000610b50610b4b610b4684610a42565b610b2b565b610a42565b9050919050565b6000610b6282610b35565b9050919050565b6000610b7482610b57565b9050919050565b610b8481610b69565b82525050565b6000602082019050610b9f6000830184610b7b565b92915050565b610bae81610acd565b8114610bb957600080fd5b50565b600081359050610bcb81610ba5565b92915050565b600060208284031215610be757610be6610a3d565b5b6000610bf584828501610bbc565b91505092915050565b600082825260208201905092915050565b7f4e6f7420656e6f75676800000000000000000000000000000000000000000000600082015250565b6000610c45600a83610bfe565b9150610c5082610c0f565b602082019050919050565b60006020820190508181036000830152610c7481610c38565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610ce482610acd565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610d1757610d16610caa565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610d6c600083610d51565b9150610d7782610d5c565b600082019050919050565b6000610d8d82610d5f565b9150819050919050565b7f63616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610dcd600b83610bfe565b9150610dd882610d97565b602082019050919050565b60006020820190508181036000830152610dfc81610dc0565b9050919050565b6000610e0e82610acd565b9150610e1983610acd565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610e5257610e51610caa565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610e9782610acd565b9150610ea283610acd565b925082610eb257610eb1610e5d565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610edc81610ebd565b8114610ee757600080fd5b50565b600081519050610ef981610ed3565b92915050565b6000819050919050565b610f1281610eff565b8114610f1d57600080fd5b50565b600081519050610f2f81610f09565b92915050565b600081519050610f4481610ba5565b92915050565b600080600080600060a08688031215610f6657610f65610a3d565b5b6000610f7488828901610eea565b9550506020610f8588828901610f20565b9450506040610f9688828901610f35565b9350506060610fa788828901610f35565b9250506080610fb888828901610eea565b9150509295509295909350565b6000610fd082610eff565b9150610fdb83610eff565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561101a57611019610caa565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561105757611056610caa565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561109457611093610caa565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff05821260008412600084121616156110d1576110d0610caa565b5b82820290509291505056fea2646970667358221220a154c5a09636b7f0b06b4e561740cb7c66424108451f49984d5ac08bcf663bc164736f6c63430008080033",
    "devdoc": {
        "author": "Aditya Taday",
        "details": "This implements PriceConvertor.sol as our library",
        "kind": "dev",
        "methods": {
            "fund()": {
                "details": "This implements PriceConvertor.sol as our library"
            }
        },
        "title": "A contract to crowd funding",
        "version": 1
    },
    "userdoc": {
        "kind": "user",
        "methods": {
            "fund()": {
                "notice": "This function funds the contract"
            }
        },
        "notice": "This is to demo a sample funding contract",
        "version": 1
    },
    "storageLayout": {
        "storage": [
            {
                "astId": 64,
                "contract": "contracts/FundMe.sol:FundMe",
                "label": "funders",
                "offset": 0,
                "slot": "0",
                "type": "t_array(t_address)dyn_storage"
            },
            {
                "astId": 68,
                "contract": "contracts/FundMe.sol:FundMe",
                "label": "addressToAmountFunded",
                "offset": 0,
                "slot": "1",
                "type": "t_mapping(t_address,t_uint256)"
            },
            {
                "astId": 71,
                "contract": "contracts/FundMe.sol:FundMe",
                "label": "priceFeed",
                "offset": 0,
                "slot": "2",
                "type": "t_contract(AggregatorV3Interface)45"
            }
        ],
        "types": {
            "t_address": {
                "encoding": "inplace",
                "label": "address",
                "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
                "base": "t_address",
                "encoding": "dynamic_array",
                "label": "address[]",
                "numberOfBytes": "32"
            },
            "t_contract(AggregatorV3Interface)45": {
                "encoding": "inplace",
                "label": "contract AggregatorV3Interface",
                "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => uint256)",
                "numberOfBytes": "32",
                "value": "t_uint256"
            },
            "t_uint256": {
                "encoding": "inplace",
                "label": "uint256",
                "numberOfBytes": "32"
            }
        }
    }
}
